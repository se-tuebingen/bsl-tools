const puppeteer = require('puppeteer');

(async () => {
  let browser;
  if(process.env.CHROMIUM_PATH) {
    try {
      browser = await puppeteer.launch({ executablePath: process.env.CHROMIUM_PATH});
    } catch(e) {
      console.error(e);
      console.error(`
        -----
        Error while trying to generate screenshots from HTML graphs generated by
        BSL-Tools in order to embed them in pdf output:
        ----
        Launching Chrome/Chromium from CHROMIUM_PATH=${process.env.CHROMIUM_PATH}
        failed, are you sure this is the right path? Try "which chromium" or "which chrome"
        on Unix systems, or unset the variable to use the bundled version.
      `);
      return;
    }
  } else {
    try {
      browser = await puppeteer.launch();
    } catch(e) {
      console.error(e);
      console.error(`
        -----
        Error while trying to generate screenshots from HTML graphs generated by
        BSL-Tools in order to embed them in pdf output:
        ----
        Launching the Chrome/Chromium version bundled with puppeteer failed.
        You could install it yourself and set the CHROMIUM_PATH environment
        variable accordingly (try "which chromium" or "which chrome" on Unix systems).
      `);
    }
  }

  const page = await browser.newPage();
  await page.setViewport({
    width: 640,
    height: 1000,
    deviceScaleFactor: 1,
  });
  const wd = process.cwd();
  await page.goto(`file://${wd}/test.html`);

  // Get location and extent of element we want to screenshot
  const dimensions = await page.evaluate(() => {
    const printEl = document.getElementById('test');
    const pos = printEl.getBoundingClientRect();
    return {
      width: printEl.clientWidth,
      height: printEl.clientHeight,
      x: pos.x,
      y: pos.y
    };
  });
  // wait for css transitions
  await new Promise(resolve => setTimeout(resolve, 2000)); // are 1s but let's be sure
  // generate screenshot
  await page.screenshot({
    path: 'test.png',
    clip: dimensions
  });

  // console.log('Dimensions:', dimensions);

  await browser.close();
})();
